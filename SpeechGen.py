import soundcloud
import xml.etree.ElementTree as ET
import urllib
import subprocess
import os
import pickle
import SimpleCV as scv
import time
def getObjData(id='83.190.1'):    
    itemstr = 'http://api.makerfairedetroit.com/item.aspx?objectid={0}'.format(id)
    stuff = urllib.urlretrieve(itemstr)
    tree = ET.parse(stuff[0])
    root = tree.getroot()
    retVal = {}
    pics = root.findall('.//resource')
    imgs = []
    for d in pics:
        for k,v in d.attrib.iteritems():
            if k == 'thumbnailFile':
                imgs.append(scv.Image(v))
                break
    for child in root:
        for k,v in child.attrib.iteritems():
            retVal[k] = v
    retVal['thumbs'] = imgs
    return retVal

def textToWav(text,file_name):
   subprocess.call(["espeak","-ven-us","-s120","-a150","-p80","-w"+file_name,text])
# 
def wavToMp3(infile='temp.wav',outfile='temp.mp3'):
    os.system('lame -s22.05k -b16k {0} {1}'.format( infile, outfile))

def generateTour(exhibitList):
    startStr = "\n\n\n You should now be at exhibit {0} located at {1}{2}. \n\n\n"
    endStr = "\n\n\n Please pause the audio and proceed to exhibit {0} located at {1}{2}.\n\n\n"
    exhibitData = []
    for exhibit in exhibitList:
        exhibitData.append(getObjData(id=exhibit))
        
    finalStr = "Welcome to your virtual tour at the Henry Ford Museum. "
    count = 0 
    for exhibit in exhibitData:
        if count > 0:
            finalStr += endStr.format(exhibit['title'],exhibit['CurrLocation2'],exhibit['CurrLocation3'])     
        count = count + 1
        finalStr += startStr.format(exhibit['title'],exhibit['CurrLocation2'],exhibit['CurrLocation3'])   
        finalStr += exhibit['abstract']
        if( exhibit.has_key('abstractExp') ):
            finalStr += exhibit['expAbstract'] 
    finalStr+="\n\n\n This concludes our tour. Thank you for visiting the Henry Ford Museum."
    return finalStr,exhibitData

def SendToSC(filename,title="Autogenerated"):
    pkl_file = open('sc.pkl', 'rb')
    sc = pickle.load(pkl_file)
    client = soundcloud.Client(client_id=sc['sc_id'],
                               client_secret=sc['sc_secret'],
                               username = sc['sc_un'],
                               password = sc['sc_pw'])
                           
    track = client.post('/tracks', track={
        'title': title,
        'sharing': 'public',  # make this 'public' if you want
        'asset_data': open(filename, 'rb')
        })
    print track.permalink_url
    return track.permalink_url

def buildMap(mapImg,exhibitList,data,objMap):
    last = objMap[exhibitList[0]]
    mapImg.drawText('START',last[0],last[1])
    derp = scv.ImageSet()
    for exhibit,info in zip(exhibitList,data):
        curr = objMap[exhibit]
        thumb = info['thumbs'][0].scale(0.5)
        offset = (thumb.width/2,thumb.height/2)
        mapImg = mapImg.applyLayers()
        mapImg = mapImg.blit(thumb,(curr[0]-offset[0],curr[1]-offset[1]),mask=thumb.binarize())
        mapImg.drawText(info['title'],curr[0]+20,curr[1]-20)
        mapImg.drawLine(last,curr,thickness=1,color=scv.Color.RED)
        mapImg.drawCircle(curr,4,color=scv.Color.RED,thickness=3)
        last = curr
        mapImg = mapImg.applyLayers()
        derp.append(mapImg)
    derp.save('magic.gif')
    retVal = mapImg.applyLayers()
    return retVal

def buildTour(exhibitList,objMap):
    mapImg = scv.Image('./images/map.png')
    myStr,data = generateTour(exhibitList)
    textToWav(myStr,'out.wav')
    wavToMp3('out.wav','out.mp3')
    out = buildMap(mapImg,exhibitList,data,objMap)
    out.show()
    out.save('outMap.png')
    result = SendToSC('out.mp3',"HELLO WORLD!!!")


exhibitList = ['00.136.123','19.3.1','00.241.1','81.9.1','87.154.1','48.6.1','2011.329.2','2011.329.1','2011.392.1']

objMap = {
    '00.136.123': (625, 440),
    '19.3.1': (625,425),
    '00.241.1': (630,410),
    '81.9.1': (645,380),
    '87.154.1': (650,360),
    '48.6.1': (660,310),
    '2011.329.2': (675,195),
    '2011.329.1': (690,200),
    '2011.392.1': (685,171)
    }
result = buildTour(exhibitList,objMap)
print result
